{
  "version": 3,
  "sources": ["../../marko/src/node_modules/@internal/components-beginComponent/index-browser.js", "../../marko/src/node_modules/@internal/components-endComponent/index-browser.js", "../../marko/src/runtime/components/renderer.js"],
  "sourcesContent": ["var ComponentDef = require(\"../../../runtime/components/ComponentDef\");\n\nmodule.exports = function beginComponent(\n  componentsContext,\n  component,\n  key,\n  ownerComponentDef\n) {\n  var componentId = component.id;\n  var componentDef = (componentsContext.___componentDef = new ComponentDef(\n    component,\n    componentId,\n    componentsContext\n  ));\n  componentsContext.___globalContext.___renderedComponentsById[\n    componentId\n  ] = true;\n  componentsContext.___components.push(componentDef);\n\n  var out = componentsContext.___out;\n  out.bc(component, key, ownerComponentDef && ownerComponentDef.___component);\n  return componentDef;\n};\n", "\"use strict\";\n\nmodule.exports = function endComponent(out) {\n  out.ee(); // endElement() (also works for VComponent nodes pushed on to the stack)\n};\n", "var copyProps = require(\"raptor-util/copyProps\");\nvar beginComponent = require(\"@internal/components-beginComponent\");\nvar endComponent = require(\"@internal/components-endComponent\");\nvar registry = require(\"@internal/components-registry\");\nvar componentsUtil = require(\"@internal/components-util\");\nvar componentLookup = componentsUtil.___componentLookup;\n\nvar ComponentsContext = require(\"./ComponentsContext\");\nvar getComponentsContext = ComponentsContext.___getComponentsContext;\nvar isServer = componentsUtil.___isServer === true;\n\nvar COMPONENT_BEGIN_ASYNC_ADDED_KEY = \"$wa\";\n\nfunction resolveComponentKey(key, parentComponentDef) {\n  if (key[0] === \"#\") {\n    return key.substring(1);\n  } else {\n    return parentComponentDef.id + \"-\" + parentComponentDef.___nextKey(key);\n  }\n}\n\nfunction trackAsyncComponents(out) {\n  if (out.isSync() || out.global[COMPONENT_BEGIN_ASYNC_ADDED_KEY]) {\n    return;\n  }\n\n  out.on(\"beginAsync\", handleBeginAsync);\n  out.on(\"beginDetachedAsync\", handleBeginDetachedAsync);\n  out.global[COMPONENT_BEGIN_ASYNC_ADDED_KEY] = true;\n}\n\nfunction handleBeginAsync(event) {\n  var parentOut = event.parentOut;\n  var asyncOut = event.out;\n  var componentsContext = parentOut.___components;\n\n  if (componentsContext !== undefined) {\n    // We are going to start a nested ComponentsContext\n    asyncOut.___components = new ComponentsContext(asyncOut, componentsContext);\n  }\n  // Carry along the component arguments\n  asyncOut.c(\n    parentOut.___assignedComponentDef,\n    parentOut.___assignedKey,\n    parentOut.___assignedCustomEvents,\n  );\n}\n\nfunction handleBeginDetachedAsync(event) {\n  var asyncOut = event.out;\n  handleBeginAsync(event);\n  asyncOut.on(\"beginAsync\", handleBeginAsync);\n  asyncOut.on(\"beginDetachedAsync\", handleBeginDetachedAsync);\n}\n\nfunction createRendererFunc(\n  templateRenderFunc,\n  componentProps,\n  renderingLogic,\n) {\n  var onInput = renderingLogic && renderingLogic.onInput;\n  var typeName = componentProps.t;\n  var isSplit = componentProps.s === true;\n  var isImplicitComponent = componentProps.i === true;\n\n  var shouldApplySplitMixins = renderingLogic && isSplit;\n\n  // eslint-disable-next-line no-constant-condition\n  if (\"MARKO_DEBUG\") {\n    if (!componentProps.d) {\n      throw new Error(\n        \"Component was compiled in a different NODE_ENV than the Marko runtime is using.\",\n      );\n    }\n  } else if (componentProps.d) {\n    throw new Error(\"Runtime/NODE_ENV Mismatch\");\n  }\n\n  return function renderer(input, out) {\n    trackAsyncComponents(out);\n\n    var componentsContext = getComponentsContext(out);\n    var globalComponentsContext = componentsContext.___globalContext;\n\n    var component = globalComponentsContext.___rerenderComponent;\n    var isRerender = component !== undefined;\n    var id;\n    var isExisting;\n    var customEvents;\n    var parentComponentDef = componentsContext.___componentDef;\n    var ownerComponentDef = out.___assignedComponentDef;\n    var ownerComponentId = ownerComponentDef && ownerComponentDef.id;\n    var key = out.___assignedKey;\n\n    if (component) {\n      // If component is provided then we are currently rendering\n      // the top-level UI component as part of a re-render\n      id = component.id; // We will use the ID of the component being re-rendered\n      isExisting = true; // This is a re-render so we know the component is already in the DOM\n      globalComponentsContext.___rerenderComponent = null;\n    } else {\n      // Otherwise, we are rendering a nested UI component. We will need\n      // to match up the UI component with the component already in the\n      // DOM (if any) so we will need to resolve the component ID from\n      // the assigned key. We also need to handle any custom event bindings\n      // that were provided.\n      if (parentComponentDef) {\n        // console.log('componentArgs:', componentArgs);\n        customEvents = out.___assignedCustomEvents;\n\n        if (key != null) {\n          id = resolveComponentKey(key.toString(), parentComponentDef);\n        } else {\n          id = parentComponentDef.___nextComponentId();\n        }\n      } else {\n        id = globalComponentsContext.___nextComponentId();\n      }\n    }\n\n    if (isServer) {\n      // If we are rendering on the server then things are simplier since\n      // we don't need to match up the UI component with a previously\n      // rendered component already mounted to the DOM. We also create\n      // a lightweight ServerComponent\n      component = registry.___createComponent(\n        renderingLogic,\n        id,\n        input,\n        out,\n        typeName,\n        customEvents,\n        ownerComponentId,\n      );\n\n      // This is the final input after running the lifecycle methods.\n      // We will be passing the input to the template for the `input` param\n      input = component.___updatedInput;\n    } else {\n      if (!component) {\n        if (\n          isRerender &&\n          (component = componentLookup[id]) &&\n          component.___type !== typeName\n        ) {\n          // Destroy the existing component since\n          component.destroy();\n          component = undefined;\n        }\n\n        if (component) {\n          isExisting = true;\n        } else {\n          isExisting = false;\n          // We need to create a new instance of the component\n          component = registry.___createComponent(typeName, id);\n\n          if (shouldApplySplitMixins === true) {\n            shouldApplySplitMixins = false;\n\n            var renderingLogicProps =\n              typeof renderingLogic == \"function\"\n                ? renderingLogic.prototype\n                : renderingLogic;\n\n            copyProps(renderingLogicProps, component.constructor.prototype);\n          }\n        }\n\n        // Set this flag to prevent the component from being queued for update\n        // based on the new input. The component is about to be rerendered\n        // so we don't want to queue it up as a result of calling `setInput()`\n        component.___updateQueued = true;\n\n        if (customEvents) {\n          component.___setCustomEvents(customEvents, ownerComponentId);\n        }\n\n        if (isExisting === false) {\n          component.___emitCreate(input, out);\n        }\n\n        input = component.___setInput(input, onInput, out);\n\n        if (isExisting === true) {\n          if (\n            component.___isDirty === false ||\n            component.shouldUpdate(input, component.___state) === false\n          ) {\n            // We put a placeholder element in the output stream to ensure that the existing\n            // DOM node is matched up correctly when using morphdom. We flag the VElement\n            // node to track that it is a preserve marker\n            out.___preserveComponent(component);\n            globalComponentsContext.___renderedComponentsById[id] = true;\n            component.___reset(); // The component is no longer dirty so reset internal flags\n            return;\n          }\n        }\n      }\n\n      component.___global = out.global;\n      component.___emitRender(out);\n    }\n\n    var componentDef = beginComponent(\n      componentsContext,\n      component,\n      key,\n      ownerComponentDef,\n      isSplit,\n      isImplicitComponent,\n    );\n\n    componentDef.___isExisting = isExisting;\n\n    // Render the template associated with the component using the final template\n    // data that we constructed\n    templateRenderFunc(\n      input,\n      out,\n      componentDef,\n      component,\n      component.___rawState,\n      out.global,\n    );\n\n    endComponent(out, componentDef);\n    componentsContext.___componentDef = parentComponentDef;\n  };\n}\n\nmodule.exports = createRendererFunc;\n\n// exports used by the legacy renderer\ncreateRendererFunc.___resolveComponentKey = resolveComponentKey;\ncreateRendererFunc.___trackAsyncComponents = trackAsyncComponents;\n"],
  "mappings": "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",
  "names": ["require_index_browser", "require_index_browser"]
}
