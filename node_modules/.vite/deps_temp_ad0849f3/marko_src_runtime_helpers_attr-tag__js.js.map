{
  "version": 3,
  "sources": ["../../marko/src/runtime/helpers/attr-tag.js"],
  "sourcesContent": ["\"use strict\";\n\nvar ownerInput;\n\nexports.r = function repeatedAttrTag(targetProperty, attrTagInput) {\n  var prev = ownerInput[targetProperty];\n  if (prev) {\n    prev.push(attrTagInput);\n  } else {\n    ownerInput[targetProperty] = [attrTagInput];\n  }\n};\nexports.a = function repeatableAttrTag(targetProperty, attrTagInput) {\n  var prev = ownerInput[targetProperty];\n  if (prev) {\n    if (Array.isArray(prev)) {\n      prev.push(attrTagInput);\n    } else {\n      ownerInput[targetProperty] = [prev, attrTagInput];\n    }\n  } else {\n    attrTagInput[Symbol.iterator] = selfIterator;\n    ownerInput[targetProperty] = attrTagInput;\n  }\n};\n\nexports.i = function attrTagInput(render, input) {\n  var prevOwnerInput = ownerInput;\n  ownerInput = input || {};\n  try {\n    var renderBody = render();\n    if (renderBody) {\n      ownerInput.renderBody = renderBody;\n    }\n    return ownerInput;\n  } finally {\n    ownerInput = prevOwnerInput;\n  }\n};\n\nfunction* selfIterator() {\n  yield this;\n}\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,QAAI;AAEJ,YAAQ,IAAI,SAAS,gBAAgB,gBAAgB,cAAc;AACjE,UAAI,OAAO,WAAW,cAAc;AACpC,UAAI,MAAM;AACR,aAAK,KAAK,YAAY;AAAA,MACxB,OAAO;AACL,mBAAW,cAAc,IAAI,CAAC,YAAY;AAAA,MAC5C;AAAA,IACF;AACA,YAAQ,IAAI,SAAS,kBAAkB,gBAAgB,cAAc;AACnE,UAAI,OAAO,WAAW,cAAc;AACpC,UAAI,MAAM;AACR,YAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,eAAK,KAAK,YAAY;AAAA,QACxB,OAAO;AACL,qBAAW,cAAc,IAAI,CAAC,MAAM,YAAY;AAAA,QAClD;AAAA,MACF,OAAO;AACL,qBAAa,OAAO,QAAQ,IAAI;AAChC,mBAAW,cAAc,IAAI;AAAA,MAC/B;AAAA,IACF;AAEA,YAAQ,IAAI,SAAS,aAAa,QAAQ,OAAO;AAC/C,UAAI,iBAAiB;AACrB,mBAAa,SAAS,CAAC;AACvB,UAAI;AACF,YAAI,aAAa,OAAO;AACxB,YAAI,YAAY;AACd,qBAAW,aAAa;AAAA,QAC1B;AACA,eAAO;AAAA,MACT,UAAE;AACA,qBAAa;AAAA,MACf;AAAA,IACF;AAEA,cAAU,eAAe;AACvB,YAAM;AAAA,IACR;AAAA;AAAA;",
  "names": []
}
