import {
  require_style_value
} from "./chunk-463SBOXY.js";
import {
  require_parse_html
} from "./chunk-NISPTXZL.js";
import {
  require_class_value
} from "./chunk-G6EQPBAW.js";
import {
  require_complain
} from "./chunk-AUY6IS4O.js";
import {
  __commonJS
} from "./chunk-VUNV25KB.js";

// node_modules/marko/src/runtime/vdom/helpers/attrs.js
var require_attrs = __commonJS({
  "node_modules/marko/src/runtime/vdom/helpers/attrs.js"(exports, module) {
    var complain = require_complain();
    var classHelper = require_class_value();
    var styleHelper = require_style_value();
    var parseHTML = require_parse_html();
    module.exports = function(attributes) {
      if (typeof attributes === "string") {
        if ("MARKO_DEBUG") {
          complain(
            "Passing a string as a dynamic attribute value is deprecated - More details: https://github.com/marko-js/marko/wiki/Deprecation:-String-as-dynamic-attribute-value"
          );
        }
        return parseAttrs(attributes);
      }
      if (attributes) {
        var newAttributes = {};
        for (var attrName in attributes) {
          var val = attributes[attrName];
          if (attrName === "renderBody") {
            continue;
          }
          if (attrName === "class") {
            val = classHelper(val);
          } else if (attrName === "style") {
            val = styleHelper(val);
          }
          newAttributes[attrName] = val;
        }
        return newAttributes;
      }
      return attributes;
    };
    function parseAttrs(str) {
      if (str === "") {
        return {};
      }
      var attrs = parseHTML("<a " + str + ">").attributes;
      var result = {};
      var attr;
      for (var len = attrs.length, i = 0; i < len; i++) {
        attr = attrs[i];
        result[attr.name] = attr.value;
      }
      return result;
    }
  }
});

export {
  require_attrs
};
//# sourceMappingURL=chunk-NTB57Y6X.js.map
