{
  "version": 3,
  "sources": ["../../listener-tracker/lib/listener-tracker.js", "../../marko/src/runtime/components/update-manager.js", "../../marko/src/runtime/components/Component.js", "../../marko/src/runtime/components/State.js", "../../marko/src/runtime/components/defineComponent.js"],
  "sourcesContent": ["var INDEX_EVENT = 0;\nvar INDEX_USER_LISTENER = 1;\nvar INDEX_WRAPPED_LISTENER = 2;\nvar DESTROY = \"destroy\";\n\nfunction isNonEventEmitter(target) {\n  return !target.once;\n}\n\nfunction EventEmitterWrapper(target) {\n    this.$__target = target;\n    this.$__listeners = [];\n    this.$__subscribeTo = null;\n}\n\nEventEmitterWrapper.prototype = {\n    $__remove: function(test, testWrapped) {\n        var target = this.$__target;\n        var listeners = this.$__listeners;\n\n        this.$__listeners = listeners.filter(function(curListener) {\n            var curEvent = curListener[INDEX_EVENT];\n            var curListenerFunc = curListener[INDEX_USER_LISTENER];\n            var curWrappedListenerFunc = curListener[INDEX_WRAPPED_LISTENER];\n\n            if (testWrapped) {\n                // If the user used `once` to attach an event listener then we had to\n                // wrap their listener function with a new function that does some extra\n                // cleanup to avoid a memory leak. If the `testWrapped` flag is set to true\n                // then we are attempting to remove based on a function that we had to\n                // wrap (not the user listener function)\n                if (curWrappedListenerFunc && test(curEvent, curWrappedListenerFunc)) {\n                    target.removeListener(curEvent, curWrappedListenerFunc);\n\n                    return false;\n                }\n            } else if (test(curEvent, curListenerFunc)) {\n                // If the listener function was wrapped due to it being a `once` listener\n                // then we should remove from the target EventEmitter using wrapped\n                // listener function. Otherwise, we remove the listener using the user-provided\n                // listener function.\n                target.removeListener(curEvent, curWrappedListenerFunc || curListenerFunc);\n\n                return false;\n            }\n\n            return true;\n        });\n\n        // Fixes https://github.com/raptorjs/listener-tracker/issues/2\n        // If all of the listeners stored with a wrapped EventEmitter\n        // have been removed then we should unregister the wrapped\n        // EventEmitter in the parent SubscriptionTracker\n        var subscribeTo = this.$__subscribeTo;\n\n        if (!this.$__listeners.length && subscribeTo) {\n            var self = this;\n            var subscribeToList = subscribeTo.$__subscribeToList;\n            subscribeTo.$__subscribeToList = subscribeToList.filter(function(cur) {\n                return cur !== self;\n            });\n        }\n    },\n\n    on: function(event, listener) {\n        this.$__target.on(event, listener);\n        this.$__listeners.push([event, listener]);\n        return this;\n    },\n\n    once: function(event, listener) {\n        var self = this;\n\n        // Handling a `once` event listener is a little tricky since we need to also\n        // do our own cleanup if the `once` event is emitted. Therefore, we need\n        // to wrap the user's listener function with our own listener function.\n        var wrappedListener = function() {\n            self.$__remove(function(event, listenerFunc) {\n                return wrappedListener === listenerFunc;\n            }, true /* We are removing the wrapped listener */);\n\n            listener.apply(this, arguments);\n        };\n\n        this.$__target.once(event, wrappedListener);\n        this.$__listeners.push([event, listener, wrappedListener]);\n        return this;\n    },\n\n    removeListener: function(event, listener) {\n        if (typeof event === 'function') {\n            listener = event;\n            event = null;\n        }\n\n        if (listener && event) {\n            this.$__remove(function(curEvent, curListener) {\n                return event === curEvent && listener === curListener;\n            });\n        } else if (listener) {\n            this.$__remove(function(curEvent, curListener) {\n                return listener === curListener;\n            });\n        } else if (event) {\n            this.removeAllListeners(event);\n        }\n\n        return this;\n    },\n\n    removeAllListeners: function(event) {\n\n        var listeners = this.$__listeners;\n        var target = this.$__target;\n\n        if (event) {\n            this.$__remove(function(curEvent, curListener) {\n                return event === curEvent;\n            });\n        } else {\n            for (var i = listeners.length - 1; i >= 0; i--) {\n                var cur = listeners[i];\n                target.removeListener(cur[INDEX_EVENT], cur[INDEX_USER_LISTENER]);\n            }\n            this.$__listeners.length = 0;\n        }\n\n        return this;\n    }\n};\n\nfunction EventEmitterAdapter(target) {\n    this.$__target = target;\n}\n\nEventEmitterAdapter.prototype = {\n    on: function(event, listener) {\n        this.$__target.addEventListener(event, listener);\n        return this;\n    },\n\n    once: function(event, listener) {\n        var self = this;\n\n        // need to save this so we can remove it below\n        var onceListener = function() {\n          self.$__target.removeEventListener(event, onceListener);\n          listener();\n        };\n        this.$__target.addEventListener(event, onceListener);\n        return this;\n    },\n\n    removeListener: function(event, listener) {\n        this.$__target.removeEventListener(event, listener);\n        return this;\n    }\n};\n\nfunction SubscriptionTracker() {\n    this.$__subscribeToList = [];\n}\n\nSubscriptionTracker.prototype = {\n\n    subscribeTo: function(target, options) {\n        var addDestroyListener = !options || options.addDestroyListener !== false;\n        var wrapper;\n        var nonEE;\n        var subscribeToList = this.$__subscribeToList;\n\n        for (var i=0, len=subscribeToList.length; i<len; i++) {\n            var cur = subscribeToList[i];\n            if (cur.$__target === target) {\n                wrapper = cur;\n                break;\n            }\n        }\n\n        if (!wrapper) {\n            if (isNonEventEmitter(target)) {\n              nonEE = new EventEmitterAdapter(target);\n            }\n\n            wrapper = new EventEmitterWrapper(nonEE || target);\n            if (addDestroyListener && !nonEE) {\n                wrapper.once(DESTROY, function() {\n                    wrapper.removeAllListeners();\n\n                    for (var i = subscribeToList.length - 1; i >= 0; i--) {\n                        if (subscribeToList[i].$__target === target) {\n                            subscribeToList.splice(i, 1);\n                            break;\n                        }\n                    }\n                });\n            }\n\n            // Store a reference to the parent SubscriptionTracker so that we can do cleanup\n            // if the EventEmitterWrapper instance becomes empty (i.e., no active listeners)\n            wrapper.$__subscribeTo = this;\n            subscribeToList.push(wrapper);\n        }\n\n        return wrapper;\n    },\n\n    removeAllListeners: function(target, event) {\n        var subscribeToList = this.$__subscribeToList;\n        var i;\n\n        if (target) {\n            for (i = subscribeToList.length - 1; i >= 0; i--) {\n                var cur = subscribeToList[i];\n                if (cur.$__target === target) {\n                    cur.removeAllListeners(event);\n\n                    if (!cur.$__listeners.length) {\n                        // Do some cleanup if we removed all\n                        // listeners for the target event emitter\n                        subscribeToList.splice(i, 1);\n                    }\n\n                    break;\n                }\n            }\n        } else {\n            for (i = subscribeToList.length - 1; i >= 0; i--) {\n                subscribeToList[i].removeAllListeners();\n            }\n            subscribeToList.length = 0;\n        }\n    }\n};\n\nexports = module.exports = SubscriptionTracker;\n\nexports.wrap = function(targetEventEmitter) {\n    var nonEE;\n    var wrapper;\n\n    if (isNonEventEmitter(targetEventEmitter)) {\n      nonEE = new EventEmitterAdapter(targetEventEmitter);\n    }\n\n    wrapper = new EventEmitterWrapper(nonEE || targetEventEmitter);\n    if (!nonEE) {\n      // we don't set this for non EE types\n      targetEventEmitter.once(DESTROY, function() {\n          wrapper.$__listeners.length = 0;\n      });\n    }\n\n    return wrapper;\n};\n\nexports.createTracker = function() {\n    return new SubscriptionTracker();\n};\n", "\"use strict\";\n\nvar updatesScheduled = false;\nvar batchStack = []; // A stack of batched updates\nvar unbatchedQueue = []; // Used for scheduled batched updates\n\nvar setImmediate = require(\"@internal/set-immediate\").___setImmediate;\n\n/**\n * This function is called when we schedule the update of \"unbatched\"\n * updates to components.\n */\nfunction updateUnbatchedComponents() {\n  if (unbatchedQueue.length) {\n    try {\n      updateComponents(unbatchedQueue);\n    } finally {\n      // Reset the flag now that this scheduled batch update\n      // is complete so that we can later schedule another\n      // batched update if needed\n      updatesScheduled = false;\n    }\n  }\n}\n\nfunction scheduleUpdates() {\n  if (updatesScheduled) {\n    // We have already scheduled a batched update for the\n    // nextTick so nothing to do\n    return;\n  }\n\n  updatesScheduled = true;\n\n  setImmediate(updateUnbatchedComponents);\n}\n\nfunction updateComponents(queue) {\n  // Loop over the components in the queue and update them.\n  // NOTE: It is okay if the queue grows during the iteration\n  //       since we will still get to them at the end\n  for (var i = 0; i < queue.length; i++) {\n    var component = queue[i];\n    component.___update(); // Do the actual component update\n  }\n\n  // Clear out the queue by setting the length to zero\n  queue.length = 0;\n}\n\nfunction batchUpdate(func) {\n  // If the batched update stack is empty then this\n  // is the outer batched update. After the outer\n  // batched update completes we invoke the \"afterUpdate\"\n  // event listeners.\n  var batch = [];\n\n  batchStack.push(batch);\n\n  try {\n    func();\n  } finally {\n    try {\n      // Update all of the components that where queued up\n      // in this batch (if any)\n      updateComponents(batch);\n    } finally {\n      // Now that we have completed the update of all the components\n      // in this batch we need to remove it off the top of the stack\n      batchStack.length--;\n    }\n  }\n}\n\nfunction queueComponentUpdate(component) {\n  var batchStackLen = batchStack.length;\n\n  if (batchStackLen) {\n    // When a batch update is started we push a new batch on to a stack.\n    // If the stack has a non-zero length then we know that a batch has\n    // been started so we can just queue the component on the top batch. When\n    // the batch is ended this component will be updated.\n    batchStack[batchStackLen - 1].push(component);\n  } else {\n    // We are not within a batched update. We need to schedule a batch update\n    // for the nextTick (if that hasn't been done already) and we will\n    // add the component to the unbatched queue\n    scheduleUpdates();\n    unbatchedQueue.push(component);\n  }\n}\n\nexports.___queueComponentUpdate = queueComponentUpdate;\nexports.___batchUpdate = batchUpdate;\n", "\"use strict\";\n\n// eslint-disable-next-line no-constant-binary-expression\nvar complain = \"MARKO_DEBUG\" && require(\"complain\");\nvar EventEmitter = require(\"events-light\");\nvar SubscriptionTracker = require(\"listener-tracker\");\nvar inherit = require(\"raptor-util/inherit\");\nvar componentsUtil = require(\"@internal/components-util\");\nvar componentLookup = componentsUtil.___componentLookup;\nvar destroyNodeRecursive = componentsUtil.___destroyNodeRecursive;\nvar defaultCreateOut = require(\"../createOut\");\nvar domInsert = require(\"../dom-insert\");\nvar RenderResult = require(\"../RenderResult\");\nvar morphdom = require(\"../vdom/morphdom\");\nvar getComponentsContext =\n  require(\"./ComponentsContext\").___getComponentsContext;\nvar domData = require(\"./dom-data\");\nvar eventDelegation = require(\"./event-delegation\");\nvar updateManager = require(\"./update-manager\");\nvar componentsByDOMNode = domData.___componentByDOMNode;\nvar keyedElementsByComponentId = domData.___ssrKeyedElementsByComponentId;\nvar CONTEXT_KEY = \"__subtree_context__\";\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar slice = Array.prototype.slice;\n\nvar COMPONENT_SUBSCRIBE_TO_OPTIONS;\nvar NON_COMPONENT_SUBSCRIBE_TO_OPTIONS = {\n  addDestroyListener: false,\n};\n\nvar emit = EventEmitter.prototype.emit;\nvar ELEMENT_NODE = 1;\n\nfunction removeListener(removeEventListenerHandle) {\n  removeEventListenerHandle();\n}\n\nfunction walkFragments(fragment) {\n  var node;\n\n  while (fragment) {\n    node = fragment.firstChild;\n\n    if (!node) {\n      break;\n    }\n\n    fragment = node.fragment;\n  }\n\n  return node;\n}\n\nfunction handleCustomEventWithMethodListener(\n  component,\n  targetMethodName,\n  args,\n  extraArgs,\n) {\n  // Remove the \"eventType\" argument\n  args.push(component);\n\n  if (extraArgs) {\n    args = extraArgs.concat(args);\n  }\n\n  var targetComponent = componentLookup[component.___scope];\n  var targetMethod =\n    typeof targetMethodName === \"function\"\n      ? targetMethodName\n      : targetComponent[targetMethodName];\n  if (!targetMethod) {\n    throw Error(\"Method not found: \" + targetMethodName);\n  }\n\n  targetMethod.apply(targetComponent, args);\n}\n\nfunction resolveKeyHelper(key, index) {\n  return index ? key + \"_\" + index : key;\n}\n\nfunction resolveComponentIdHelper(component, key, index) {\n  return component.id + \"-\" + resolveKeyHelper(key, index);\n}\n\n/**\n * This method is used to process \"update_<stateName>\" handler functions.\n * If all of the modified state properties have a user provided update handler\n * then a rerender will be bypassed and, instead, the DOM will be updated\n * looping over and invoking the custom update handlers.\n * @return {boolean} Returns true if if the DOM was updated. False, otherwise.\n */\nfunction processUpdateHandlers(component, stateChanges, oldState) {\n  var handlerMethod;\n  var handlers;\n\n  for (var propName in stateChanges) {\n    if (hasOwnProperty.call(stateChanges, propName)) {\n      var handlerMethodName = \"update_\" + propName;\n\n      handlerMethod = component[handlerMethodName];\n      if (handlerMethod) {\n        (handlers || (handlers = [])).push([propName, handlerMethod]);\n      } else {\n        // This state change does not have a state handler so return false\n        // to force a rerender\n        return;\n      }\n    }\n  }\n\n  // If we got here then all of the changed state properties have\n  // an update handler or there are no state properties that actually\n  // changed.\n  if (handlers) {\n    // Otherwise, there are handlers for all of the changed properties\n    // so apply the updates using those handlers\n\n    handlers.forEach(function (handler) {\n      var propertyName = handler[0];\n      handlerMethod = handler[1];\n\n      var newValue = stateChanges[propertyName];\n      var oldValue = oldState[propertyName];\n      handlerMethod.call(component, newValue, oldValue);\n    });\n\n    component.___emitUpdate();\n    component.___reset();\n  }\n\n  return true;\n}\n\nfunction checkInputChanged(existingComponent, oldInput, newInput) {\n  if (oldInput != newInput) {\n    if (oldInput == null || newInput == null) {\n      return true;\n    }\n\n    var oldKeys = Object.keys(oldInput);\n    var newKeys = Object.keys(newInput);\n    var len = oldKeys.length;\n    if (len !== newKeys.length) {\n      return true;\n    }\n\n    for (var i = len; i--; ) {\n      var key = oldKeys[i];\n      if (!(key in newInput && oldInput[key] === newInput[key])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nvar componentProto;\n\n/**\n * Base component type.\n *\n * NOTE: Any methods that are prefixed with an underscore should be considered private!\n */\nfunction Component(id) {\n  EventEmitter.call(this);\n  this.id = id;\n  this.___state = null;\n  this.___rootNode = null;\n  this.___subscriptions = null;\n  this.___domEventListenerHandles = null;\n  this.___bubblingDomEvents = null; // Used to keep track of bubbling DOM events for components rendered on the server\n  this.___customEvents = null;\n  this.___scope = null;\n  this.___renderInput = null;\n  this.___input = undefined;\n  this.___mounted = false;\n  this.___global = undefined;\n  this.___destroyed = false;\n  this.___updateQueued = false;\n  this.___dirty = false;\n  this.___settingInput = false;\n  this.___host = undefined;\n\n  var ssrKeyedElements = keyedElementsByComponentId[id];\n\n  if (ssrKeyedElements) {\n    this.___keyedElements = ssrKeyedElements;\n    delete keyedElementsByComponentId[id];\n  } else {\n    this.___keyedElements = {};\n  }\n}\n\nComponent.prototype = componentProto = {\n  ___isComponent: true,\n\n  subscribeTo: function (target) {\n    if (!target) {\n      throw TypeError();\n    }\n\n    var subscriptions =\n      this.___subscriptions ||\n      (this.___subscriptions = new SubscriptionTracker());\n\n    var subscribeToOptions = target.___isComponent\n      ? COMPONENT_SUBSCRIBE_TO_OPTIONS\n      : NON_COMPONENT_SUBSCRIBE_TO_OPTIONS;\n\n    return subscriptions.subscribeTo(target, subscribeToOptions);\n  },\n\n  emit: function (eventType) {\n    var customEvents = this.___customEvents;\n    var target;\n\n    if (customEvents && (target = customEvents[eventType])) {\n      var targetMethodName = target[0];\n      var isOnce = target[1];\n      var extraArgs = target[2];\n      var args = slice.call(arguments, 1);\n\n      handleCustomEventWithMethodListener(\n        this,\n        targetMethodName,\n        args,\n        extraArgs,\n      );\n\n      if (isOnce) {\n        delete customEvents[eventType];\n      }\n    }\n\n    return emit.apply(this, arguments);\n  },\n  getElId: function (key, index) {\n    if (!key) {\n      return this.id;\n    }\n    return resolveComponentIdHelper(this, key, index);\n  },\n  getEl: function (key, index) {\n    if (key) {\n      var resolvedKey = resolveKeyHelper(key, index);\n      var keyedElement = this.___keyedElements[\"@\" + resolvedKey];\n      if (keyedElement && keyedElement.nodeType === 12 /** FRAGMENT_NODE */) {\n        // eslint-disable-next-line no-constant-condition\n        if (\"MARKO_DEBUG\") {\n          complain(\n            \"Accessing the elements of a child component using 'component.getEl' is deprecated.\",\n          );\n        }\n\n        return walkFragments(keyedElement);\n      }\n\n      return keyedElement;\n    } else {\n      return this.el;\n    }\n  },\n  getEls: function (key) {\n    key = key + \"[]\";\n\n    var els = [];\n    var i = 0;\n    var el;\n    while ((el = this.getEl(key, i))) {\n      els.push(el);\n      i++;\n    }\n    return els;\n  },\n  getComponent: function (key, index) {\n    var rootNode = this.___keyedElements[\"@\" + resolveKeyHelper(key, index)];\n    if (/\\[\\]$/.test(key)) {\n      // eslint-disable-next-line no-constant-condition\n      if (\"MARKO_DEBUG\") {\n        complain(\n          \"A repeated key[] was passed to getComponent. Use a non-repeating key if there is only one of these components.\",\n        );\n      }\n      rootNode = rootNode && rootNode[Object.keys(rootNode)[0]];\n    }\n    return rootNode && componentsByDOMNode.get(rootNode);\n  },\n  getComponents: function (key) {\n    var lookup = this.___keyedElements[\"@\" + key + \"[]\"];\n    return lookup\n      ? Object.keys(lookup)\n          .map(function (key) {\n            return componentsByDOMNode.get(lookup[key]);\n          })\n          .filter(Boolean)\n      : [];\n  },\n  destroy: function () {\n    if (this.___destroyed) {\n      return;\n    }\n\n    var root = this.___rootNode;\n\n    this.___destroyShallow();\n\n    var nodes = root.nodes;\n\n    nodes.forEach(function (node) {\n      destroyNodeRecursive(node);\n\n      if (eventDelegation.___handleNodeDetach(node) !== false) {\n        node.parentNode.removeChild(node);\n      }\n    });\n\n    root.detached = true;\n\n    delete componentLookup[this.id];\n    this.___keyedElements = {};\n  },\n\n  ___destroyShallow: function () {\n    if (this.___destroyed) {\n      return;\n    }\n\n    this.___emitDestroy();\n    this.___destroyed = true;\n\n    componentsByDOMNode.set(this.___rootNode, undefined);\n\n    this.___rootNode = null;\n\n    // Unsubscribe from all DOM events\n    this.___removeDOMEventListeners();\n\n    var subscriptions = this.___subscriptions;\n    if (subscriptions) {\n      subscriptions.removeAllListeners();\n      this.___subscriptions = null;\n    }\n  },\n\n  isDestroyed: function () {\n    return this.___destroyed;\n  },\n  get state() {\n    return this.___state;\n  },\n  set state(newState) {\n    var state = this.___state;\n    if (!state && !newState) {\n      return;\n    }\n\n    if (!state) {\n      state = this.___state = new this.___State(this);\n    }\n\n    state.___replace(newState || {});\n\n    if (state.___dirty) {\n      this.___queueUpdate();\n    }\n\n    if (!newState) {\n      this.___state = null;\n    }\n  },\n  setState: function (name, value) {\n    var state = this.___state;\n\n    if (!state) {\n      state = this.___state = new this.___State(this);\n    }\n    if (typeof name == \"object\") {\n      // Merge in the new state with the old state\n      var newState = name;\n      for (var k in newState) {\n        if (hasOwnProperty.call(newState, k)) {\n          state.___set(k, newState[k], true /* ensure:true */);\n        }\n      }\n    } else {\n      state.___set(name, value, true /* ensure:true */);\n    }\n  },\n\n  setStateDirty: function (name, value) {\n    var state = this.___state;\n\n    if (arguments.length == 1) {\n      value = state[name];\n    }\n\n    state.___set(\n      name,\n      value,\n      true /* ensure:true */,\n      true /* forceDirty:true */,\n    );\n  },\n\n  replaceState: function (newState) {\n    this.___state.___replace(newState);\n  },\n\n  get input() {\n    return this.___input;\n  },\n  set input(newInput) {\n    if (this.___settingInput) {\n      this.___input = newInput;\n    } else {\n      this.___setInput(newInput);\n    }\n  },\n\n  ___setInput: function (newInput, onInput, out) {\n    onInput = onInput || this.onInput;\n    var updatedInput;\n\n    var oldInput = this.___input;\n    this.___input = undefined;\n    this.___context = (out && out[CONTEXT_KEY]) || this.___context;\n\n    if (onInput) {\n      // We need to set a flag to preview `this.input = foo` inside\n      // onInput causing infinite recursion\n      this.___settingInput = true;\n      updatedInput = onInput.call(this, newInput || {}, out);\n      this.___settingInput = false;\n    }\n\n    newInput = this.___renderInput = updatedInput || newInput;\n\n    if ((this.___dirty = checkInputChanged(this, oldInput, newInput))) {\n      this.___queueUpdate();\n    }\n\n    if (this.___input === undefined) {\n      this.___input = newInput;\n      if (newInput && newInput.$global) {\n        this.___global = newInput.$global;\n      }\n    }\n\n    return newInput;\n  },\n\n  forceUpdate: function () {\n    this.___dirty = true;\n    this.___queueUpdate();\n  },\n\n  ___queueUpdate: function () {\n    if (!this.___updateQueued) {\n      this.___updateQueued = true;\n      updateManager.___queueComponentUpdate(this);\n    }\n  },\n\n  update: function () {\n    if (this.___destroyed === true || this.___isDirty === false) {\n      return;\n    }\n\n    var input = this.___input;\n    var state = this.___state;\n\n    if (this.___dirty === false && state !== null && state.___dirty === true) {\n      if (processUpdateHandlers(this, state.___changes, state.___old, state)) {\n        state.___dirty = false;\n      }\n    }\n\n    if (this.___isDirty === true) {\n      // The UI component is still dirty after process state handlers\n      // then we should rerender\n\n      if (this.shouldUpdate(input, state) !== false) {\n        this.___scheduleRerender();\n      }\n    }\n\n    this.___reset();\n  },\n\n  get ___isDirty() {\n    return (\n      this.___dirty === true ||\n      (this.___state !== null && this.___state.___dirty === true)\n    );\n  },\n\n  ___reset: function () {\n    this.___dirty = false;\n    this.___updateQueued = false;\n    this.___renderInput = null;\n    var state = this.___state;\n    if (state) {\n      state.___reset();\n    }\n  },\n\n  shouldUpdate: function () {\n    return true;\n  },\n\n  ___scheduleRerender: function () {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var self = this;\n    var renderer = self.___renderer;\n\n    if (!renderer) {\n      throw TypeError();\n    }\n\n    var input = this.___renderInput || this.___input;\n\n    updateManager.___batchUpdate(function () {\n      self.___rerender(input, false).afterInsert(self.___host);\n    });\n\n    this.___reset();\n  },\n\n  ___rerender: function (input, isHydrate) {\n    var host = this.___host;\n    var globalData = this.___global;\n    var rootNode = this.___rootNode;\n    var renderer = this.___renderer;\n    var createOut = renderer.createOut || defaultCreateOut;\n    var out = createOut(globalData);\n    out.sync();\n    out.___host = this.___host;\n    out[CONTEXT_KEY] = this.___context;\n\n    var componentsContext = getComponentsContext(out);\n    var globalComponentsContext = componentsContext.___globalContext;\n    globalComponentsContext.___rerenderComponent = this;\n    globalComponentsContext.___isHydrate = isHydrate;\n\n    renderer(input, out);\n\n    var result = new RenderResult(out);\n\n    var targetNode = out.___getOutput().___firstChild;\n\n    morphdom(rootNode, targetNode, host, componentsContext);\n\n    return result;\n  },\n\n  ___detach: function () {\n    var root = this.___rootNode;\n    root.remove();\n    return root;\n  },\n\n  ___removeDOMEventListeners: function () {\n    var eventListenerHandles = this.___domEventListenerHandles;\n    if (eventListenerHandles) {\n      eventListenerHandles.forEach(removeListener);\n      this.___domEventListenerHandles = null;\n    }\n  },\n\n  get ___rawState() {\n    var state = this.___state;\n    return state && state.___raw;\n  },\n\n  ___setCustomEvents: function (customEvents, scope) {\n    var finalCustomEvents = (this.___customEvents = {});\n    this.___scope = scope;\n\n    customEvents.forEach(function (customEvent) {\n      var eventType = customEvent[0];\n      var targetMethodName = customEvent[1];\n      var isOnce = customEvent[2];\n      var extraArgs = customEvent[3];\n\n      if (targetMethodName) {\n        finalCustomEvents[eventType] = [targetMethodName, isOnce, extraArgs];\n      }\n    });\n  },\n\n  get el() {\n    return walkFragments(this.___rootNode);\n  },\n\n  get els() {\n    // eslint-disable-next-line no-constant-condition\n    if (\"MARKO_DEBUG\") {\n      complain(\n        'The \"this.els\" attribute is deprecated. Please use \"this.getEls(key)\" instead.',\n      );\n    }\n    return (this.___rootNode ? this.___rootNode.nodes : []).filter(\n      function (el) {\n        return el.nodeType === ELEMENT_NODE;\n      },\n    );\n  },\n\n  ___emit: emit,\n  ___emitCreate(input, out) {\n    this.onCreate && this.onCreate(input, out);\n    this.___emit(\"create\", input, out);\n  },\n\n  ___emitRender(out) {\n    this.onRender && this.onRender(out);\n    this.___emit(\"render\", out);\n  },\n\n  ___emitUpdate() {\n    this.onUpdate && this.onUpdate();\n    this.___emit(\"update\");\n  },\n\n  ___emitMount() {\n    this.onMount && this.onMount();\n    this.___emit(\"mount\");\n  },\n\n  ___emitDestroy() {\n    this.onDestroy && this.onDestroy();\n    this.___emit(\"destroy\");\n  },\n};\n\ncomponentProto.elId = componentProto.getElId;\ncomponentProto.___update = componentProto.update;\ncomponentProto.___destroy = componentProto.destroy;\n\n// Add all of the following DOM methods to Component.prototype:\n// - appendTo(referenceEl)\n// - replace(referenceEl)\n// - replaceChildrenOf(referenceEl)\n// - insertBefore(referenceEl)\n// - insertAfter(referenceEl)\n// - prependTo(referenceEl)\ndomInsert(\n  componentProto,\n  function getEl(component) {\n    return component.___detach();\n  },\n  function afterInsert(component) {\n    return component;\n  },\n);\n\ninherit(Component, EventEmitter);\n\nmodule.exports = Component;\n", "var extend = require(\"raptor-util/extend\");\n\nfunction ensure(state, propertyName) {\n  var proto = state.constructor.prototype;\n  if (!(propertyName in proto)) {\n    Object.defineProperty(proto, propertyName, {\n      get: function () {\n        return this.___raw[propertyName];\n      },\n      set: function (value) {\n        this.___set(propertyName, value, false /* ensure:false */);\n      },\n    });\n  }\n}\n\nfunction State(component) {\n  this.___component = component;\n  this.___raw = {};\n\n  this.___dirty = false;\n  this.___old = null;\n  this.___changes = null;\n  this.___forced = null; // An object that we use to keep tracking of state properties that were forced to be dirty\n\n  Object.seal(this);\n}\n\nState.prototype = {\n  ___reset: function () {\n    this.___dirty = false;\n    this.___old = null;\n    this.___changes = null;\n    this.___forced = null;\n  },\n\n  ___replace: function (newState) {\n    var key;\n    var rawState = this.___raw;\n\n    for (key in rawState) {\n      if (!(key in newState)) {\n        this.___set(\n          key,\n          undefined,\n          false /* ensure:false */,\n          false /* forceDirty:false */,\n        );\n      }\n    }\n\n    for (key in newState) {\n      this.___set(\n        key,\n        newState[key],\n        true /* ensure:true */,\n        false /* forceDirty:false */,\n      );\n    }\n  },\n  ___set: function (name, value, shouldEnsure, forceDirty) {\n    var rawState = this.___raw;\n\n    if (shouldEnsure) {\n      ensure(this, name);\n    }\n\n    if (forceDirty) {\n      var forcedDirtyState = this.___forced || (this.___forced = {});\n      forcedDirtyState[name] = true;\n    } else if (rawState[name] === value) {\n      return;\n    }\n\n    if (!this.___dirty) {\n      // This is the first time we are modifying the component state\n      // so introduce some properties to do some tracking of\n      // changes to the state\n      this.___dirty = true; // Mark the component state as dirty (i.e. modified)\n      this.___old = rawState;\n      this.___raw = rawState = extend({}, rawState);\n      this.___changes = {};\n      this.___component.___queueUpdate();\n    }\n\n    this.___changes[name] = value;\n\n    if (value === undefined) {\n      // Don't store state properties with an undefined or null value\n      delete rawState[name];\n    } else {\n      // Otherwise, store the new value in the component state\n      rawState[name] = value;\n    }\n  },\n  toJSON: function () {\n    return this.___raw;\n  },\n};\n\nmodule.exports = State;\n", "\"use strict\";\n\nvar inherit = require(\"raptor-util/inherit\");\nvar BaseComponent = require(\"./Component\");\nvar BaseState = require(\"./State\");\n\nmodule.exports = function defineComponent(def, renderer) {\n  if (def.___isComponent) {\n    return def;\n  }\n\n  var ComponentClass = function () {};\n  var proto;\n\n  var type = typeof def;\n\n  if (type == \"function\") {\n    proto = def.prototype;\n  } else if (type == \"object\") {\n    proto = def;\n  } else {\n    throw TypeError();\n  }\n\n  ComponentClass.prototype = proto;\n\n  // We don't use the constructor provided by the user\n  // since we don't invoke their constructor until\n  // we have had a chance to do our own initialization.\n  // Instead, we store their constructor in the \"initComponent\"\n  // property and that method gets called later inside\n  // init-components-browser.js\n  function Component(id) {\n    BaseComponent.call(this, id);\n  }\n\n  if (!proto.___isComponent) {\n    // Inherit from Component if they didn't already\n    inherit(ComponentClass, BaseComponent);\n  }\n\n  // The same prototype will be used by our constructor after\n  // we he have set up the prototype chain using the inherit function\n  proto = Component.prototype = ComponentClass.prototype;\n\n  // proto.constructor = def.constructor = Component;\n\n  // Set a flag on the constructor function to make it clear this is\n  // a component so that we can short-circuit this work later\n  Component.___isComponent = true;\n\n  function State(component) {\n    BaseState.call(this, component);\n  }\n  inherit(State, BaseState);\n  proto.___State = State;\n  proto.___renderer = renderer;\n\n  return Component;\n};\n"],
  "mappings": "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",
  "names": ["event", "i", "key"]
}
