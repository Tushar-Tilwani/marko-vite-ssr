{
  "version": 3,
  "sources": ["../../stackframe/stackframe.js", "../../error-stack-parser/error-stack-parser.js", "../../complain/index.js"],
  "sourcesContent": ["(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n", "(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(,.*$)/g, '');\n                }\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').replace(/^.*?\\s+/, '');\n\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n                // case it has spaces in it, as the string is split on \\s+ later on\n                var location = sanitizedLine.match(/ (\\(.+\\)$)/);\n\n                // remove the parenthesized location from the line, if it was matched\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n                // if a location was matched, pass it to extractLocation() otherwise pass all sanitizedLine\n                // because this line doesn't have function name\n                var locationParts = this.extractLocation(location ? location[1] : sanitizedLine);\n                var functionName = location && sanitizedLine || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                    var matches = line.match(functionNameRegex);\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n", "'use strict';\n\nvar StackParser = require('error-stack-parser');\nvar env = typeof process !== 'undefined' && process.env.NODE_ENV;\nvar isDevelopment = !env || env === 'dev' || env === 'development';\nvar showModuleComplains = typeof process !== 'undefined' && Boolean(process.env.SHOW_MODULE_COMPLAINS);\nvar showNestedComplains = typeof process !== 'undefined' && Boolean(process.env.SHOW_NESTED_COMPLAINS);\nvar logger = typeof console !== 'undefined' && console.warn && console;\nvar cwd = typeof process !== 'undefined' && process.cwd && process.cwd() + '/' || '';\nvar linebreak = typeof process !== 'undefined' && 'win32' === process.platform ? '\\r\\n' : '\\n';\nvar newline = /(\\r\\n|\\r|\\n)/g;\nvar slice = [].slice;\nvar ignoredLocation = \"[ignore]\";\nvar hits = {};\n\ncomplain = isDevelopment ? complain : noop;\ncomplain.method = isDevelopment ? method : noop;\ncomplain.fn = isDevelopment ? fn : noopReturn;\ncomplain.log = log;\ncomplain.stream = typeof process !== 'undefined' && process.stderr;\ncomplain.silence = false;\ncomplain.color = complain.stream && complain.stream.isTTY;\ncomplain.colors = { warning:'\\x1b[31;1m', notice:'\\x1b[33;1m', message:false, location:'\\u001b[90m' };\ncomplain.getModuleName = getModuleName;\n\n/* istanbul ignore next */\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = complain;\n} else if(typeof window !== 'undefined') {\n  window.complain = complain;\n}\n\nfunction complain() {\n  var options;\n  var location;\n  var locationIndex;\n  var headingColor;\n  var heading;\n  var level;\n  var args = arguments;\n\n  if(complain.silence) return;\n\n  if(typeof args[args.length-1] === 'object') {\n    options = args[args.length-1];\n    args = slice.call(args, 0, -1);\n  } else {\n    options = {};\n  }\n\n  level = options.level || 2;\n  heading = options.heading || (level == 2 ? \"WARNING!!\" : \"NOTICE\");\n  headingColor = options.headingColor || (level == 2 ? complain.colors.warning : complain.colors.notice);\n\n  // Default to the location of the call to the deprecated function\n  locationIndex = options.locationIndex == null ? 1 : options.locationIndex;\n\n  // When the user sets location to false,\n  // We will use the location of the call to complain()\n  // To limit the log to only occurring once\n  if(options.location === false) {\n    locationIndex = 0;\n  }\n\n  location = options.location || getLocation(locationIndex);\n  \n  var moduleName = complain.getModuleName(location);\n\n  if (moduleName && !showModuleComplains) {\n    if (!hits[moduleName]) {\n      var output = format(\"NOTICE\", complain.colors.notice);\n      output += linebreak + format('The module ['+moduleName+'] is using deprecated features.', complain.colors.message);\n      output += linebreak + format('Run with process.env.SHOW_MODULE_COMPLAINS=1 to see all warnings.', complain.colors.message);\n      complain.log(linebreak + output + linebreak);\n      hits[moduleName] = true;\n    }\n    return;\n  }\n\n  /* istanbul ignore next */\n  // Location is only missing in older browsers.\n  if(location) {\n    if(hits[location] || location === ignoredLocation) return;\n    else hits[location] = true;\n  }\n\n  var output = format(heading, headingColor);\n\n  for(var i = 0; i < args.length; i++) {\n    output += linebreak + format(args[i], complain.colors.message);\n  }\n\n  if(options.location !== false && location) {\n    output += linebreak + format('  at '+location.replace(cwd, ''), complain.colors.location);\n  }\n\n  complain.log(linebreak + output + linebreak);\n};\n\nfunction method(object, methodName) {\n    var originalMethod = object[methodName];\n    var args = slice.call(arguments, 2);\n\n    object[methodName] = function() {\n        complain.apply(null, args);\n        return originalMethod.apply(this, arguments);\n    };\n}\n\nfunction fn(original) {\n  var args = slice.call(arguments, 1);\n\n  return function() {\n    complain.apply(null, args);\n    return original.apply(this, arguments);\n  }\n}\n\nfunction log(message, color) {\n  var formatted = format(message, color);\n  if(complain.stream) {\n    complain.stream.write(formatted+linebreak);\n  } else if(logger) {\n    logger.warn(formatted);\n  }\n}\n\nfunction format(message, color) {\n  return color && complain.color ? color + message + '\\x1b[0m' : message;\n}\n\nfunction getLocation(locationIndex) {\n  var location = '';\n  var targetIndex = locationIndex + 2;\n\n  /**\n   * Stack index descriptions.\n   * \n   * 0: In getLocation(), the call to new Error()\n   * 1: In complain(), the call to getLocation()\n   * 2: In the deprecated function, the call to complain()\n   * 3: The call to the deprecated function (THIS IS THE DEFAULT)\n   */\n\n  try {\n    var locations = StackParser.parse(new Error()).map(function(frame) {\n      return frame.fileName+':'+frame.lineNumber+':'+frame.columnNumber;\n    });\n    if (!showNestedComplains) {\n      for (var i = locations.length-1; i > targetIndex; i--) {\n        if (hits[locations[i]]) {\n          return ignoredLocation;\n        }\n      }\n    }\n    location = locations[targetIndex];\n  } catch(e) {}\n\n  return location;\n}\n\nfunction getModuleName(location) {\n  var locationParts = location.replace(cwd, '').split(/\\/|\\\\/g);\n  for(var i = locationParts.length-1; i >= 0; i--) {\n    if (locationParts[i] === 'node_modules') {\n      var moduleName = locationParts[i+1];\n      return (moduleName[0] === '@') ? moduleName+'/'+locationParts[i+2] : moduleName;\n    }\n  }\n}\n\nfunction noop(){};\nfunction noopReturn(r) { return r; };\n"],
  "mappings": "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",
  "names": ["i"]
}
