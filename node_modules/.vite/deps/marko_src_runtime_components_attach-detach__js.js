import {
  require_event_delegation
} from "./chunk-CNQJXT2F.js";
import "./chunk-XOFOD672.js";
import "./chunk-VUNV25KB.js";

// node_modules/marko/src/runtime/components/attach-detach.js
var eventDelegation = require_event_delegation();
var delegateEvent = eventDelegation.___delegateEvent;
var getEventFromEl = eventDelegation.___getEventFromEl;
function handleNodeAttach(node, componentsContext) {
  if (node.nodeType === 1) {
    var eventName = "onattach";
    var target = getEventFromEl(node, eventName);
    if (target) {
      var out = componentsContext.___out;
      var data = out.data;
      var attachTargets = data.___attachTargets;
      if (!attachTargets) {
        attachTargets = data.___attachTargets = [];
        out.on("___componentsInitialized", function() {
          for (var i = 0; i < attachTargets.length; i += 2) {
            var node2 = attachTargets[i];
            var target2 = attachTargets[i + 1];
            delegateEvent(node2, eventName, target2, {});
          }
        });
      }
      attachTargets.push(node);
      attachTargets.push(target);
    }
  }
}
function handleNodeDetach(node) {
  if (node.nodeType === 1) {
    var eventName = "ondetach";
    var target = getEventFromEl(node, eventName);
    if (target) {
      var allowDetach;
      delegateEvent(node, eventName, target, {
        preventDefault: function() {
          allowDetach = false;
        },
        detach: function() {
          var parentNode = node.parentNode;
          if (parentNode) {
            parentNode.removeChild(node);
          }
        }
      });
      return allowDetach;
    }
  }
}
eventDelegation.___handleNodeAttach = handleNodeAttach;
eventDelegation.___handleNodeDetach = handleNodeDetach;
//# sourceMappingURL=marko_src_runtime_components_attach-detach__js.js.map
